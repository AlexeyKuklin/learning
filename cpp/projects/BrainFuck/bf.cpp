#include <iostream>

/*
> — перейти к следующей ячейке
< — перейти к предыдущей ячейке
+ — увеличить значение в текущей ячейке на 1
- — уменьшить значение в текущей ячейке на 1
. — напечатать значение из текущей ячейки
, — ввести извне значение и сохранить в текущей ячейке
[ — если значение текущей ячейки 0, перейти вперёд по тексту программы на ячейку, следующую за соответствующей ] (с учётом вложенности)
] — если значение текущей ячейки не ноль, перейти назад по тексту программы на символ [ (с учётом вложенности)
*/

using namespace std;

class Brainfuck {
  public:
    char data[1000];
    char *d;
    const char *p;

    Brainfuck(const char prog[]) {
      for(int i=0; i<1000; i++) 
          data[i] = 0;

      d = data;
      p = prog;
    }

    void bropen() {
      if (!(*d)) {  
        int c = 1;
        do {
          p++;
          if      (*p == '[') c++;
          else if (*p == ']') c--;
        } while (c != 0);
      }
    }

    void brclose() {
      if (*d) {  
        int c = 0;
        do {
          if      (*p == '[') c++;
          else if (*p == ']') c--;
          p--;
        } while(c != 0);
      }
    }

    void evaluate() {
      while (*p) {
        switch (*p) {
          case '>':
            d++;
           break;
           case '<':
            d--;
            break;
          case '+':
            (*d)++;
            break;
          case '-':
            (*d)--;
            break;
          case '.':
            cout << *d;
            break;
          case ',':
            cin >> *d;
            break;
          case '[':
            bropen();
            break;
          case ']':
            brclose();
            break;
        }
        p++;
      }
    }
};


int main(int argc, char **argv) {
  char* buffer = //">++++++++[<+++++++++>-]<.";
                 //">++++++++[<+++++++++>-]<.>>+>+>++>[-]+<[>[->+<<++++>]<<]>.+++++++..+++.>>+++++++.<<<[[-]<[-]>]<+++++++++++++++.>>.+++.------.--------.>>+.>++++.";
                 //">++++++++++>>>+>+[>>>+[-[<<<<<[+<<<<<]>>[[-]>[<<+>+>-]<[>+<-]<[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>[-]>>>>+>+<<<<<<-[>+<-]]]]]]]]]]]>[<+>-]+>>>>>]<<<<<[<<<<<]>>>>>>>[>>>>>]++[-<<<<<]>>>>>>-]+>>>>>]<[>++<-]<<<<[<[>+<-]<<<<]>>[->[-]++++++[<++++++++>-]>>>>]<<<<<[<[>+>+<<-]>.<<<<<]>.>>>>]";
                 //https://stackoverflow.com/questions/42194338/how-can-i-improve-my-bf-factorial-code-to-input-large-numbers-and-output-the-who
                 ",>,>,<<[>+<[<+>-]].>.>.";

  Brainfuck interpreter = Brainfuck(buffer);
  interpreter.evaluate();
  return 0;

}
